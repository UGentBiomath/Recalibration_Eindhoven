/*******************************************************************************
 *
 * Tornado - Advanced Kernel for Modeling and Virtual Experimentation
 * (c) Copyright 2004-2011 DHI
 *
 * This file is provided under the terms of a license and may not be
 * distributed and/or modified except where allowed by that license.
 *
 * This file is provided as is with no warranty of any kind, including the
 * warranty of design, merchantability and fitness for a particular purpose.
 *
 * $Revision: 1$
 * $Date: 5. september 2011 16:01:09$
 *
 ******************************************************************************/

#ifndef WWTP_BASE_PROCESS_CALCULATOR
#define WWTP_BASE_PROCESS_CALCULATOR

CLASS BaseParameters
  "Base class for all process calculators, ie cost and process parameters"

  SPECIALISES
  PhysicalDAEModelType :=
  {:

    interface <-
    {
  // Solids accumulated in the system (cost), HRT (process parameters)
  OBJ V1 (* terminal = "in_1" *)"Volume of unit 1" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V2 (* terminal = "in_1" *)"Volume of unit 2" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V3 (* terminal = "in_1" *)"Volume of unit 3" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V4 (* terminal = "in_1" *)"Volume of unit 4" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V5 (* terminal = "in_1" *)"Volume of unit 5" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V6 (* terminal = "in_1" *)"Volume of unit 6" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V7 (* terminal = "in_1" *)"Volume of unit 7" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V8 (* terminal = "in_1" *)"Volume of unit 8" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V9 (* terminal = "in_1" *)"Volume of unit 9" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V10 (* terminal = "in_1" *)"Volume of unit 10" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V11 (* terminal = "in_1" *)"Volume of unit 11" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V12 (* terminal = "in_1" *)"Volume of unit 12" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V13 (* terminal = "in_1" *)"Volume of unit 13" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V14 (* terminal = "in_1" *)"Volume of unit 14" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V15 (* terminal = "in_1" *)"Volume of unit 15" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V16 (* terminal = "in_1" *)"Volume of unit 16" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    
    OBJ V1_aer (* terminal = "in_1" *)"Volume of aerated unit 1" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V2_aer (* terminal = "in_1" *)"Volume of aerated unit 2" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V3_aer (* terminal = "in_1" *)"Volume of aerated unit 3" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V4_aer (* terminal = "in_1" *)"Volume of aerated unit 4" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V5_aer (* terminal = "in_1" *)"Volume of aerated unit 5" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
    OBJ V6_aer (* terminal = "in_1" *)"Volume of aerated unit 6" : Volume := {:causality <- "CIN" ; group <- "Dimension" :};
//
  OBJ TSS1 (* terminal = "in_1" *) "Tot.susp.solids (unit 1)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS2 (* terminal = "in_1" *) "Tot.susp.solids (unit 2)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS3 (* terminal = "in_1" *) "Tot.susp.solids (unit 3)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS4 (* terminal = "in_1" *) "Tot.susp.solids (unit 4)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS5 (* terminal = "in_1" *) "Tot.susp.solids (unit 5)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS6 (* terminal = "in_1" *) "Tot.susp.solids (unit 6)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS7 (* terminal = "in_1" *) "Tot.susp.solids (unit 7)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS8 (* terminal = "in_1" *) "Tot.susp.solids (unit 8)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS9 (* terminal = "in_1" *) "Tot.susp.solids (unit 9)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS10 (* terminal = "in_1" *) "Tot.susp.solids (unit 10)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS11 (* terminal = "in_1" *) "Tot.susp.solids (unit 11)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS12 (* terminal = "in_1" *) "Tot.susp.solids (unit 12)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS13 (* terminal = "in_1" *) "Tot.susp.solids (unit 13)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS14 (* terminal = "in_1" *) "Tot.susp.solids (unit 14)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS15 (* terminal = "in_1" *) "Tot.susp.solids (unit 15)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS16 (* terminal = "in_1" *) "Tot.susp.solids (unit 16)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    
    OBJ TSS1_aer (* terminal = "in_1" *) "Tot.susp.solids (aerated unit 1)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS2_aer (* terminal = "in_1" *) "Tot.susp.solids (aerated unit 2)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS3_aer (* terminal = "in_1" *) "Tot.susp.solids (aerated unit 3)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS4_aer (* terminal = "in_1" *) "Tot.susp.solids (aerated unit 4)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS5_aer (* terminal = "in_1" *) "Tot.susp.solids (aerated unit 5)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};
    OBJ TSS6_aer (* terminal = "in_1" *) "Tot.susp.solids (aerated unit 6)": Concentration:= {:causality <- "CIN" ; group <- "Measurement data" :};//
  // Solids in the sludge waste flow (cost), SRT (operation)
  OBJ Q_Waste (*terminal = "in_1" *) "Flow rate of waste sludge": FlowRate := {: causality <- "CIN" ; group <- "Operational" :};
  OBJ TSS_waste (* terminal = "in_1" *) "Suspended solids in the waste sludge" : Concentration := {: causality <- "CIN" ; group <- "Measurement data" :};
    };
  
  independent <-
    {
    OBJ t "Time" : Time := {: group <- "Time" :}; 
    };

  parameters <-
    {
    };

  state <-
    {
  OBJ m_TSS (* hidden = "1" *) "Amount of sludge accumulated in the system" : Mass :={:group <- "Measurement data":};
  OBJ V (* hidden = "1" *) "Total volume of the tanks" : Volume := {: group <- "Dimension" :};
  OBJ m_aer_TSS (* hidden="1" *) "Amount of aerobic sludge accumulated in the system" : Mass :={:group <- "Measurement data":};
    };

  equations <-
    {
  state.m_TSS = interface.V1 * interface.TSS1 + interface.V2 * interface.TSS2 + interface.V3 * interface.TSS3
         + interface.V4 * interface.TSS4 + interface.V5 * interface.TSS5 + interface.V6 * interface.TSS6
         + interface.V7 * interface.TSS7 + interface.V8 * interface.TSS8 + interface.V9 * interface.TSS9
         + interface.V10 * interface.TSS10 + interface.V11 * interface.TSS11 + interface.V12 * interface.TSS12
         + interface.V13 * interface.TSS13 + interface.V14 * interface.TSS14 + interface.V15 * interface.TSS15
         + interface.V16 * interface.TSS16 + interface.V1_aer * interface.TSS1_aer + interface.V2_aer * interface.TSS2_aer 
        + interface.V3_aer * interface.TSS3_aer + interface.V4_aer * interface.TSS4_aer + interface.V5_aer * interface.TSS5_aer 
        + interface.V6_aer * interface.TSS6_aer;
         
  state.V = interface.V1 + interface.V2 + interface.V3 + interface.V4 + interface.V5
        + interface.V6 + interface.V7 + interface.V8 + interface.V9 + interface.V10 + interface.V11 + interface.V12
        + interface.V13 + interface.V14 + interface.V15 + interface.V16;
        
  state.m_aer_TSS = interface.V1_aer * interface.TSS1_aer + interface.V2_aer * interface.TSS2_aer 
        + interface.V3_aer * interface.TSS3_aer + interface.V4_aer * interface.TSS4_aer + interface.V5_aer * interface.TSS5_aer 
        + interface.V6_aer * interface.TSS6_aer;
    };

  :};

  
CLASS OperationalParameters
  (* icon = "process_calculator" ; is_default = "true" *)
  "Calculation of the basic operational parameters of the plant: eg SRT, HRT"
// References
// Wastewater Engineering, Treatment, disposal, reuse
// Metcalf & Eddy, Third edition
// McGRAW-HILL international editions

  EXTENDS BaseParameters WITH
  {:
    comments <- "A model for the calculation of basic operational parameters";
    interface <-
    {
  // Effluent stream
    OBJ TSS_out (* terminal = "in_1" *) "Sludge concentration in the effluent" : Concentration := {: causality <- "CIN" ; group <- "Measurement data" :};
  // flow rates: In, Out, Sludge waste
  OBJ Q_In (* terminal = "in_1" *) "Influent flow rate": FlowRate:= {:causality <- "CIN" ; group <- "Operational":};
  OBJ Q_Out (* terminal = "in_1" *) "Effluent flow rate": FlowRate:= {:causality <- "CIN" ; group <- "Operational" :};
  // BOD, COD in
    OBJ BOD_In (* terminal = "in_1" *) "BOD concentration in the influent" : Concentration := {: causality <- "CIN" ; group <- "Measurement data" :};
    OBJ COD_In (* terminal = "in_1" *) "COD concentration in the influent" : Concentration := {: causality <- "CIN" ; group <- "Measurement data" :};
    };

    state <-
    {
    OBJ SRT "Instantenous Sludge retention time" : Time := {: group <- "Operational" :};
    OBJ SRT_aer "Instantaneous aerobic sludge retention time" : Time := {: group <- "Operational" :};
    OBJ HRT "Hydraulic retention time" : Time := {: group <- "Operational" :};
    OBJ F_M_BOD "Food to microorganism ratio on BOD basis" : Rate := {: group <- "Operational" :};
    OBJ F_M_COD "Food to microorganism ratio on COD basis" : Rate := {: group <- "Operational" :};
    };

    equations <-
    {
  // Total mass of solids (state.m_TSS, see: Base Class)
    state.SRT =  IF ((interface.TSS_out * interface.Q_Out + interface.TSS_waste * interface.Q_Waste) <= 0)
                 THEN 0
                 ELSE state.m_TSS / (interface.TSS_out * interface.Q_Out + interface.TSS_waste * interface.Q_Waste);
    state.SRT_aer =  IF ((interface.TSS_out * interface.Q_Out + interface.TSS_waste * interface.Q_Waste) <= 0)
                 THEN 0
                 ELSE state.m_aer_TSS / (interface.TSS_out * interface.Q_Out + interface.TSS_waste * interface.Q_Waste);
  // Total volume (state.V, see: Base Class)
    state.HRT = IF (interface.Q_In == 0)
        THEN 0
        ELSE state.V / interface.Q_In;
    state.F_M_BOD = IF (interface.Q_In == 0)
        THEN 0
        ELSE interface.BOD_In / (state.m_TSS / interface.Q_In);
    state.F_M_COD = IF (interface.Q_In == 0)
        THEN 0
        ELSE interface.COD_In / (state.m_TSS / interface.Q_In);
     };
  :};

#endif // WWTP_BASE_PROCESS_CALCULATOR

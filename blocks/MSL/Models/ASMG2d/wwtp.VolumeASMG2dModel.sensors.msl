// AUTOMATICALLY GENERATED - DO NOT MODIFY

    interface.AUR = IF (state.V == 0) THEN 0 ELSE - (state.ConversionTermPerComponent[S_NH] / state.V);
    interface.DO = state.C[S_O];
    interface.Kla_ASU = state.Kla_Actual;
    interface.NH4 = state.C[S_NH];
    interface.NO3 = state.C[S_NO3];
    interface.NPR = IF (state.V == 0) THEN 0 ELSE parameters.Stoichiometry[AutoGrowthAOB][S_NO3] * state.Kinetics[AutoGrowthAOB] + parameters.Stoichiometry[AutoGrowthNOB][S_NO3] * state.Kinetics[AutoGrowthNOB];
    interface.NUR = IF (state.V == 0) THEN 0 ELSE - (state.ConversionTermPerComponent[S_NO3] / state.V) + parameters.Stoichiometry[AutoGrowthAOB][S_NO3] * state.Kinetics[AutoGrowthAOB] + parameters.Stoichiometry[AutoGrowthNOB][S_NO3] * state.Kinetics[AutoGrowthNOB];
    interface.OUR_ASU = IF (state.V == 0) THEN 0 ELSE - (state.ConversionTermPerComponent[S_O] / state.V) + parameters.Stoichiometry[Aeration][S_O] * state.Kinetics[Aeration];
    interface.OfflineBOD = parameters.F_BOD_COD * (state.C[S_A] + state.C[S_F] + state.C[X_S] + state.C[X_PHA] + (1 - parameters.f_X_I) * (state.C[X_H] + state.C[X_BA1] + state.C[X_BA2] + state.C[X_PAO]));
    interface.OfflineTKN = (state.C[S_NH] + parameters.i_N_S_I * state.C[S_I] + parameters.i_N_S_F * state.C[S_F] + parameters.i_N_X_I * state.C[X_I] + parameters.i_N_X_S * state.C[X_S] + parameters.i_N_BM * (state.C[X_H] + state.C[X_BA1] + state.C[X_BA2] + state.C[X_PAO]));
    interface.OnlineCOD = (state.C[S_A] + state.C[S_F] + state.C[S_I] + state.C[X_H] + state.C[X_BA1] + state.C[X_BA2] + state.C[X_S] + state.C[X_I] + state.C[X_PAO] + state.C[X_PHA]);
    interface.OnlineTN = (state.C[S_NO3] + state.C[S_NH] + parameters.i_N_S_I * state.C[S_I] + parameters.i_N_S_F * state.C[S_F] + parameters.i_N_X_I * state.C[X_I] + parameters.i_N_X_S * state.C[X_S] + parameters.i_N_BM * (state.C[X_H] + state.C[X_BA1] + state.C[X_BA2] + state.C[X_PAO]));
    interface.OnlineTP = (state.C[S_PO] + state.C[X_PP] + 0.205 * state.C[X_MEP] + parameters.i_P_S_I * state.C[S_I] + parameters.i_P_S_F * state.C[S_F] + parameters.i_P_X_I * state.C[X_I] + parameters.i_P_X_S * state.C[X_S] + parameters.i_P_BM * (state.C[X_H] + state.C[X_BA1] + state.C[X_BA2] + state.C[X_PAO]));
    interface.PO4 = state.C[S_PO];
    interface.PUR = IF (state.V == 0) THEN 0 ELSE - (state.ConversionTermPerComponent[S_PO] / state.V);
    interface.TSS = state.C[X_TSS];
    interface.V_ASU = state.V;


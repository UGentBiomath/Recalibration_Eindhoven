/*******************************************************************************
 *
 * Tornado - Advanced Kernel for Modeling and Virtual Experimentation
 * (c) Copyright 2004-2011 DHI
 *
 * This file is provided under the terms of a license and may not be
 * distributed and/or modified except where allowed by that license.
 *
 * This file is provided as is with no warranty of any kind, including the
 * warranty of design, merchantability and fitness for a particular purpose.
 *
 * $Revision: 1$
 * $Date: 2. december 2016 14:37:26$
 *
 ******************************************************************************/

#ifndef RIVER_SPLITTERS_COMBINERS_RIVER_ABSTWOSPLITTER
#define RIVER_SPLITTERS_COMBINERS_RIVER_ABSTWOSPLITTER


CLASS RivAbsTwoSplitter (* icon = "two_flow_splitter" *)
"2-way absolute splitter (pump) for river"
EXTENDS River_AbsTwoSplitter_Base WITH
{:

  comments <- "2-way absolute splitter (pump) for river";

  state <-
  {
    OBJ f_Out2 (* hidden = "1" *) "Fraction of the influent flux going to Outflow No.2" : Fraction ;
  };

  equations <-
  {
    state.Q_Out_1 = IF (interface.Q_Out2 > state.Q_In) THEN 0.0
      ELSE state.Q_In - state.Q_Out_2 ;
    
    state.Q_Out_2 = IF (interface.Q_Out2 > state.Q_In) THEN state.Q_In
      ELSE interface.Q_Out2 ;
    
    state.f_Out2 = IF (state.Q_In == 0.0) THEN 0.0
      ELSE state.Q_Out_2 / state.Q_In ;
    
    {FOREACH Comp_Index IN {1 .. RWQMNrOfComponents}: interface.Outflow1[Comp_Index] =
      - state.InFluxPerComponent[Comp_Index] * (1 - state.f_Out2) ;};
    
    {FOREACH Comp_Index IN {1 .. RWQMNrOfComponents}: interface.Outflow2[Comp_Index] =
      - state.InFluxPerComponent[Comp_Index] * (state.f_Out2) ;};
  };

:};


#endif // RIVER_SPLITTERS_COMBINERS_RIVER_ABSTWOSPLITTER
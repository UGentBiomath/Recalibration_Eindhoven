/*******************************************************************************
 *
 * Tornado - Advanced Kernel for Modeling and Virtual Experimentation
 * (c) Copyright 2004-2011 DHI
 *
 * This file is provided under the terms of a license and may not be
 * distributed and/or modified except where allowed by that license.
 *
 * This file is provided as is with no warranty of any kind, including the
 * warranty of design, merchantability and fitness for a particular purpose.
 *
 * $Revision: 1$
 * $Date: 7. september 2017 11:17:38$
 *
 ******************************************************************************/

#ifndef WWTP_DEFINITIONS
#define WWTP_DEFINITIONS

 // In the Components type declaration, the user indicates
 // which components will be used in his/her models.
 // A number of assumptions are made:
 //  1. In one system, ALL the connections between
 //     sub-models pass exactly those biological components
 //     indicated in the Components declaration.
 //  2. In a physical flow, ALL components are explicitly
 //     considered: H2O, dissoved gasses, solids in suspension, ...
 //     The usual assumption that the concentration of H2O is 1
 //     and all the other concentrations are infinite will be put in 
 //     further. This, to allow modelling of systems where
 //     the above assumption is not valid.

 // EVERYTHING is deduced from the Components type declaration !
 // From this declaration, appropriate models will be expanded
 // automatically.
 //
 // As a convention, the component H2O is always written first
 // as it is the "main" component in a wWtp.
 // next in line are solubles. followed by particulates

 //===================================================================
//==========================Begin of components & reactions def.=====
//===================================================================

 // The components definition.
 // Here, the user specifies which components will be considered.
 // This will define the size of the wwtp terminal (through NrOfComponents, see above)
 // Please note that the sequence of elements in the ComponentsVector
 // is of importance !!! This sequence is used in certain models to achieve
 // model re-usability.

 // Note that also the aeration process, a mass transport process,
 // is considered to be a conversion process !!!

#ifdef ASM1Temp
#include "ASM1Temp/wwtp.definitionsASM1Temp.msl"
#endif

#if (defined ASM2dModTemp || defined IUWS1 || defined IUWS2)
#include "ASM2dModTemp/wwtp.definitionsASM2dModTemp.msl"
#endif

#ifdef ASM3Temp
#include "ASM3Temp/wwtp.definitionsASM3Temp.msl"
#endif

#ifdef ASM3P_EAWAG
#include "ASM3P_EAWAG/wwtp.definitionsASM3P_EAWAG.msl"
#endif
//
// New models, version 2012
#ifdef ASM1_AN
#include "ASM1_AN/wwtp.definitionsASM1_AN.msl"
#endif

#ifdef ASMG1
#include "ASMG1/wwtp.definitionsASMG1.msl"
#endif

//
// New models, version 2014
#ifdef ASMG2d
#include "ASMG2d/wwtp.definitionsASMG2d.msl"
#endif

#ifdef PWM_SA
#include "PWM_SA/wwtp.definitionsPWM_SA.msl"
#include "pHAlk/wwtp.definitionspHAlk.msl"
#include "PWM_SA/wwtp.definitionsPWM_SA.ionic.msl"
#endif

//
// New models, version 2016
#ifdef ASM1Temp
#include "Siegrist/wwtp.definitionsSiegrist.msl"
#endif

//#ifdef PWM_SA
//#include "UCTAD/wwtp.definitionsUCTAD.msl"
//#endif

#if (defined ASM1Temp || defined ASMG1 || defined ASM2dModTemp || defined IUWS1 || defined IUWS2)
#include "ADM1/wwtp.definitionsADM1.msl"
#endif

#ifdef ASM2dM
#include "ASM2dM/wwtp.definitionsASM2dM.msl"
#endif
//
// New models, version 2017
#ifdef ASM1Temp
#include "ASM1_AB/wwtp.definitionsASM1_AB.msl"
#endif


#endif //WWTP_DEFINITIONS
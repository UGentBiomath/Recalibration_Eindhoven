/*******************************************************************************
 *
 * Tornado - Advanced Kernel for Modeling and Virtual Experimentation
 * (c) Copyright 2004-2011 DHI
 *
 * This file is provided under the terms of a license and may not be
 * distributed and/or modified except where allowed by that license.
 *
 * This file is provided as is with no warranty of any kind, including the
 * warranty of design, merchantability and fitness for a particular purpose.
 *
 * $Revision: 1$
 * $Date: 2. december 2016 14:37:27$
 *
 ******************************************************************************/

#ifndef SEWER_GENERAL
#define SEWER_GENERAL


#if (defined ASM2dModTemp || defined IUWS1 || defined IUWS2)

OBJ Kosim1NrOfComponents : Integer := Cardinality(Kosim1Components);
OBJ Kosim1NrOfReactions : Integer := Cardinality(Kosim1Reactions);

// Terminal for Fluxes
CLASS SewerTerminal
"Variables passed between sewer model building blocks - we only consider a flux of biochemical material"
= MassFlux[Kosim1NrOfComponents;] ;
// 01/04/2015 distinction In- vs. Out- terminal is essential to compute In(Out) fluxes by SUMOVER
CLASS InSewTerminal SPECIALISES SewerTerminal;
CLASS OutSewTerminal SPECIALISES SewerTerminal;

// Terminal for Concentrations
CLASS SewerConcTerminal = Concentration[Kosim1NrOfComponents;]; 

// s_in_terminal -> sew_term_index
OBJ sew_term_index "Temporary iteration variable" : SewerTerminal;

CLASS Kosim1MassVector = Mass[Kosim1NrOfComponents;];
CLASS Kosim1ConcentrationVector = Concentration[Kosim1NrOfComponents;];
CLASS Kosim1MassFluxVector = MassFlux[Kosim1NrOfComponents;];
CLASS Kosim1SurfaceFlux = ArealFluxHa[Kosim1NrOfComponents;]; 

#endif //ASM2dModTemp

TYPE YearlyTimeVector =
    ENUM {M01, M02, M03, M04, M05, M06, M07, M08, M09, M10, M11, M12};                        

OBJ NrOfMonthlyTimeVectorElements : Integer := Cardinality(YearlyTimeVector);

CLASS MonthlyYearlyPattern "Monthly pattern" = Real[NrOfMonthlyTimeVectorElements;];

#endif // SEWER_GENERAL
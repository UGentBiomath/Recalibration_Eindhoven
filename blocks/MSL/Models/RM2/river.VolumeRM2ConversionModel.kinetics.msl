// AUTOMATICALLY GENERATED - DO NOT MODIFY

    state.Kinetics[RivAdsorptionOfPhosphate] = parameters.k_ads * state.C_w[rS_PO] * parameters.Phi;
    state.Kinetics[RivAeration] = state.Kla * (state.S_O_sat - state.C_w[rS_O2]) * parameters.Phi;
    state.Kinetics[RivAerobicEndogenousRespirationOfAlgae] = parameters.k_resp_ALG * state.e_beta_ALG * state.C[rX_ALG] * (state.C_w[rS_O2] / (parameters.K_O_ALG + state.C_w[rS_O2]));
    state.Kinetics[RivAerobicEndogenousRespirationOfFirstStageNitrifiers] = parameters.k_resp_N1 * state.e_beta_N1 * state.C[rX_N1] * (state.C_w[rS_O2] / (parameters.K_O_N1 + state.C_w[rS_O2]));
    state.Kinetics[RivAerobicEndogenousRespirationOfHeterotrophs] = parameters.k_resp_H_aer * state.e_beta_H * state.C[rX_H] * (state.C_w[rS_O2] / (parameters.K_O_H_aer + state.C_w[rS_O2]));
    state.Kinetics[RivAerobicEndogenousRespirationOfSecondStageNitrifiers] = parameters.k_resp_N2 * state.e_beta_N2 * state.C[rX_N2] * (state.C_w[rS_O2] / (parameters.K_O_N2 + state.C_w[rS_O2]));
    state.Kinetics[RivAerobicGrowthOfHeterotrophsWithNH4] = state.k_gro_H_aer_T * state.C[rX_H] * (state.C_w[rS_S] / (parameters.K_S_H_aer + state.C_w[rS_S])) * (state.C_w[rS_O2] / (parameters.K_O_H_aer + state.C_w[rS_O2])) * (state.C_w[rS_NH] / (parameters.K_N_H_aer + state.C_w[rS_NH])) * (state.C_w[rS_PO] / (parameters.K_PO_H_aer + state.C_w[rS_PO]));
    state.Kinetics[RivAerobicGrowthOfHeterotrophsWithNO3] = state.k_gro_H_aer_T * state.C[rX_H] * (state.C_w[rS_S] / (parameters.K_S_H_aer + state.C_w[rS_S])) * (state.C_w[rS_O2] / (parameters.K_O_H_aer + state.C_w[rS_O2])) * (state.C_w[rS_NO3] / (parameters.K_N_H_aer + state.C_w[rS_NO3])) * (state.C_w[rS_PO] / (parameters.K_PO_H_aer + state.C_w[rS_PO])) * (parameters.K_N_H_aer / (parameters.K_N_H_aer + state.C_w[rS_NH]));
    state.Kinetics[RivAnoxicEndogenousRespirationOfHeterotrophs] = parameters.k_resp_H_anox * state.e_beta_H * state.C[rX_H] * (parameters.K_O_H_aer / (parameters.K_O_H_aer + state.C_w[rS_O2])) * (state.C_w[rS_NO3] / (parameters.K_NO3_H_anox + state.C_w[rS_NO3]));
    state.Kinetics[RivAnoxicGrowthOfHeterotrophsWithNO2] = state.k_gro_H_anox_T * state.C[rX_H] * (state.C_w[rS_S] / (parameters.K_S_H_anox + state.C_w[rS_S])) * (parameters.K_O_H_aer / (parameters.K_O_H_aer + state.C_w[rS_O2])) * (state.C_w[rS_NO2] / (parameters.K_NO2_H_anox + state.C_w[rS_NO2])) * (state.C_w[rS_PO] / (parameters.K_PO_H_anox + state.C_w[rS_PO]));
    state.Kinetics[RivAnoxicGrowthOfHeterotrophsWithNO3] = state.k_gro_H_anox_T * state.C[rX_H] * (state.C_w[rS_S] / (parameters.K_S_H_anox + state.C_w[rS_S])) * (parameters.K_O_H_aer / (parameters.K_O_H_aer + state.C_w[rS_O2])) * (state.C_w[rS_NO3] / (parameters.K_NO3_H_anox + state.C_w[rS_NO3])) * (state.C_w[rS_PO] / (parameters.K_PO_H_anox + state.C_w[rS_PO]));
    state.Kinetics[RivDeathOfAlgae] = parameters.k_death_ALG * state.e_beta_ALG * state.C[rX_ALG];
    state.Kinetics[RivDesorptionOfPhosphate] = parameters.k_des * state.C[rX_P];
    state.Kinetics[RivGrowthOfAlgaeWithNH4] = state.k_gro_ALG_T * state.C[rX_ALG] * ((state.C_w[rS_NH] + state.C_w[rS_NO3]) / (parameters.K_NH_ALG + state.C_w[rS_NH] + state.C_w[rS_NO3])) * (state.C_w[rS_PO] / (parameters.K_PO_ALG + state.C_w[rS_PO])) * state.I / (state.I + parameters.K_I) * parameters.K_sat_ALG / (parameters.K_sat_ALG + state.C[rX_ALG]);
    state.Kinetics[RivGrowthOfAlgaeWithNO3] = state.k_gro_ALG_T * state.C[rX_ALG] * (parameters.K_NH_ALG / (parameters.K_NH_ALG + state.C_w[rS_NH])) * ((state.C_w[rS_NH] + state.C_w[rS_NO3]) /(parameters.K_N_ALG + state.C_w[rS_NH] + state.C_w[rS_NO3])) * (state.C_w[rS_PO] / (parameters.K_PO_ALG + state.C_w[rS_PO])) * state.I / (state.I + parameters.K_I) * parameters.K_sat_ALG / (parameters.K_sat_ALG + state.C[rX_ALG]);
    state.Kinetics[RivGrowthOfFirstStageNitrifiers] = state.k_gro_N1_T * state.C[rX_N1] * (state.C_w[rS_O2] / (parameters.K_O_N1 + state.C_w[rS_O2])) * (state.C_w[rS_NH] / (parameters.K_NH_N1 + state.C_w[rS_NH])) * (state.C_w[rS_PO] / (parameters.K_PO_N1 + state.C_w[rS_PO]));
    state.Kinetics[RivGrowthOfSecondStageNitrifiers] = state.k_gro_N2_T * state.C[rX_N2] * (state.C_w[rS_O2] / (parameters.K_O_N2 + state.C_w[rS_O2])) * (state.C_w[rS_NO2] / (parameters.K_NO2_N2 + state.C_w[rS_NO2])) * (state.C_w[rS_PO] / (parameters.K_PO_N2 + state.C_w[rS_PO]));
    state.Kinetics[RivHydrolysis] = parameters.k_hyd * state.e_beta_Hyd * state.C[rX_S];


/*******************************************************************************
 *
 * Tornado - Advanced Kernel for Modeling and Virtual Experimentation
 * (c) Copyright 2004-2011 DHI
 *
 * This file is provided under the terms of a license and may not be
 * distributed and/or modified except where allowed by that license.
 *
 * This file is provided as is with no warranty of any kind, including the
 * warranty of design, merchantability and fitness for a particular purpose.
 *
 * $Revision: 1$
 * $Date: 2. december 2016 15:21:58$
 *
 ******************************************************************************/

#ifndef IUWS_CONTROLLERS_ONOFF_FF
#define IUWS_CONTROLLERS_ONOFF_FF

CLASS OnOff_FF
  (* icon = "Controller" *)
  "Feed-forward on-off controller"
  EXTENDS SewerControllers_Base WITH 
  {:

  comments <- "A model for an on-off controller, if y_M > y_S then u_Off else u_On";

  interface <-
  {
   OBJ y_S (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Threshold for on/off" : Real := {: causality <- "CIN" ; value <- 7000000.0  ; group <- "Operational":};
   OBJ u_Min (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Minimum output" : Real := {: causality <- "CIN" ; value <- 0.0  ; group <- "Operational":};
   OBJ u_Max (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Maximum output" : Real := {: causality <- "CIN" ; value <- 10000.0  ; group <- "Operational":};
   OBJ change_rate (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Rate of change" : Real := {: causality <- "CIN" ; value <- 1000000.0  ; group <- "Operational":};
  };

  state <-
  {
   OBJ TS (* hidden = "1" *) "Time step" : Time := {: group <- "Operational" :};
   OBJ help_u (* hidden = "1" *) "Previous u help variable" : Real;
   OBJ help_u_h (* hidden = "1" *) "Previous u help variable" : Real;
  };

  equations <-
  {
   state.TS = independent.t - previous(independent.t) ;
   state.help_u = interface.u ;
   state.help_u_h = IF (interface.y_M > interface.y_S) THEN previous(state.help_u) + interface.change_rate * state.TS
		ELSE previous(state.help_u) - interface.change_rate * state.TS;

   interface.u = IF (state.help_u_h > interface.u_Max) THEN interface.u_Max
   		ELSE IF (state.help_u_h < interface.u_Min) THEN interface.u_Min
			 ELSE state.help_u_h ;
  };

 :};


#endif // IUWS_CONTROLLERS_ONOFF_FF